print(p+geom_bar())
library(epicalc)  #
#
### recode the variables to factors ####
recode(c(int_newcoun, int_newneigh, int_neweur, int_newusa, int_neweco, int_newit, int_newen, int_newsp, int_newhr, int_newlit, int_newent, int_newrel, int_newhth, int_bapo, int_wopo, int_eupo, int_educ), c(1,2,3,4,5,6,7,8,9, NA), #
c('Very Interested','Somewhat Interested','Not Very Interested','Not At All interested',NA,NA,NA,NA,NA,NA))#
#
### Combine recoded variables to a common vector#
Interest1<-c(int_newcoun, int_newneigh, int_neweur, int_newusa, int_neweco, int_newit, int_newen, int_newsp, int_newhr, int_newlit, int_newent, int_newrel, int_newhth, int_bapo, int_wopo, int_eupo, int_educ)
p<-ggplot(d,aes(r, ..count..))
d<-as.data.frame(cbind(1:1000,r))
p<-ggplot(d,aes(r, ..count..))
r
r<-rnorm(1000)
library(ggplot2)
d<-as.data.frame(cbind(r,1:1000))
ggplot(d,aes(r,..count..))+geom_bar()
ggplot(d,aes(r,..density..))+geom_bar()
png("density.png")
ggplot(d,aes(r,..density..))+geom_bar()
dev.off()
library(ggplot2)#
r<-rnorm(1000)#
d<-as.data.frame(cbind(r,1:1000))#
ggplot(d,aes(r,..density..))+geom_bar()
d<-lapply(1:100,function(x) paste("doperator",x,sep=''))
d
unlist(d)
d<-tapply(1:100,function(x) paste("doperator",x,sep=''))
d<-sapply(1:100,function(x) paste("doperator",x,sep=''))
d
i.got<-rep("problems",99)
which(i.got=="bitch")
?optim
a<--0.45#
sigma<-0.00000#
y<-a*x+xnorm*sigma#
r<-cor(x,y)#
plot(-4:4, -4:4, xlab= 'x', ylab= 'y', main= "", sub = "",type = "n")#
points(x,y,pch=19,cex=0.2)#
legend(-3.9, 3.8,substr(paste("r=",r), 1, 8), bg='gray90')
a<--1
a
a<--0.45#
sigma<-0.00000#
y<-a*x+xnorm*sigma#
r<-cor(x,y)#
plot(-4:4, -4:4, xlab= 'x', ylab= 'y', main= "", sub = "",type = "n")#
points(x,y,pch=19,cex=0.2)#
legend(-3.9, 3.8,substr(paste("r=",r), 1, 8), bg='gray90')
f<-5
f[which(!is.na(f))]
x=seq(0.0,1.0,.01)
x
y=seq(0.0,2.0,.1)
y
y=seq(0.0,2.0,.05)
y
y=seq(0.0,2.0,.01)
y
y=seq(0.0,2.0,.02)
y
x
y
?curve
?stack
library(stats)
formula(PlantGrowth)
unstack(PlantGrowth)
PlantGrowth
f<-function(x) return (1/(2*x)
)
f
f<-function(x) return (1/(2*x))
f
f(2)
curve(f,from=0.0,5.0)
p<-curve(f,from=0.0,5.0)
>lines
?lines
plot(cars, main="Stopping Distance versus Speed")#
lines(stats::lowess(cars))
?plotmath
e1<-function(x) { reutn(1/(2*x)}#
#
curve(e1,from=0.0,to=10.0)+xlab(expression(E\[U[i]\]))+ylab(expression(omega[i]))
e1<-function(x) { reutn(1/(2*x)}#
#
curve(e1,from=0.0,to=10.0)+xlab(expression(E(U[i])))+ylab(expression(omega[i]))
e1<-function(x) { return(1/(2*x)}#
#
curve(e1,from=0.0,to=10.0)+xlab(expression(E(U[i])))+ylab(expression(omega[i]))
e1<-function(x) { return(1/(2*x))}#
#
curve(e1,from=0.0,to=10.0)+xlab(expression(E(U[i])))+ylab(expression(omega[i]))
                                                                    #
e1<-function(x) { return(1/(2*x))}#
#
curve(e1,from=0.0,to=10.0,xlab=expression(E(U[i])),ylab=expression(omega[i]))
e1<-function(x) { return(1/(2*x))}#
#
curve(e1,from=0.0,to=10.0,xlab=expression(omega[i]),ylab=expression(y[i]))
e1<-function(x) { return(1/(2*x))}#
#
curve(e1,from=0.0,to=10.0,ylab=expression(omega[i]),xlab=expression(y[i]))
e1<-function(x) { return(1/(2*x))}#
#
curve(e1,from=0.0,to=10.0,ylab=expression(omega[i]),xlab=expression(y[i]),ylim(0,1))
e1<-function(x) { return(1/(2*x))}#
#
curve(e1,from=0.0,to=10.0,ylab=expression(omega[i]),xlab=expression(y[i]),ylim=c(0,1))
?abline
?text
?plotmath
?text
?cat
rnorm(1000,mean=.5,.25)
hist(rnorm(1000,mean=.5,.25)))
hist(rnorm(1000,mean=.5,.25))
100*.1
100^.1
100/.1
.1/100
library(ggplot2)
install.packages(c("ggplot2","igraph","lme4","zelig"),dependencies=T)
install.packages(c("lme4","Zelig"),dependencies=T)
install.packages(c("nlme","Zelig"),dependencies=T)
install.packages(c("plyr","reshape"),dependencies=T)
q()
?q
x<-rnorm(100)
x<-rnorm(100,mean=0,sd=13)
y<-rnorm(100,mean=2,sd=13)
length(which(x>y))
toms.gay<-function(i) {#
    x<-rnorm(1,mean=0,sd=13)#
    y<-rnorm(1,mean=2,sd=13)#
    return(ifelse(x<y,1,0))#
}#
#
sum(sapply(1:1000,toms.gay))
toms.gay<-function(i) {#
    x<-rnorm(1,mean=0,sd=13)#
    y<-rnorm(1,mean=2,sd=13)#
    return(ifelse(x<y,1,0))#
}#
#
sum(sapply(1:10000,toms.gay))
m<-rnorm(10000)
library(ggplot)
library(ggplot2)
w<-seq(0,1,.001)
w
length(w)
length(m)
m<-rnorm(1000)
m
curve()
curve(m)
m
w
length(m)
length(w)
w<-w[1:1000]
length(w)
w
d<-data.frame(m,w)
d
ggplot(d,aes(m))+geom_density()
ggplot(d,aes(m))+geom_density()+geom_point(aes(m/w))
ggplot(d,aes(m))+geom_density()+geom_point(aes(x=m,y=m/w))
ggplot(d,aes(m))+geom_point(aes(x=m,y=m/w))
ggplot(d,aes(m))+geom_point(aes(x=m,y=m/.7))
curve(x/2,from=0,to=10)
p<-curve(x/2,from=0,to=10)
dnorm(1)
curve(dnorm,from=0,to=100)
curve(dnorm,from=-1,to=1)
p<-curve(dnorm,from=-1,to=1)#
p<-p+curve(x/.8,from=0,to=.4)#
print(p)
p<-curve(dnorm,from=0,to=2,xlab="Citizen Belief about m", ylab="")#
p<-p+curve(function(x) x/.8,from=0,to=2,xlab="Citizen Belief about m", ylab="")#
print(p)
curve(function(x) x/2,from=0,to=2,xlab="Citizen Belief about m", ylab="")
curve(function(x) x/2,from=0,to=2)
curve(x/2,from=0,to=2)
curve(x/2,from=0,to=3,xlab="Citizen Belief about m", ylab="")
?recordPlot
?dnorm
m
w
d
ggplot(d,aes(w))+stat_function(fun=dnorm)
ggplot(d,aes(x=w))+stat_function(fun=dnorm)
ggplot(d,aes(x=w)+stat_function(fun=dnorm)
)
ggplot(d,aes(x=w))+stat_function(fun=dnorm)
w
apply(w,dnorm)
apply(w,FUN=dnorm)
sapply(w,dnorm)
library(foreach)
?foreach
install.packages("tm",dependencies=T)
2->a
a
1<->2
install.packages("lavaan",dependencies=T)
library(lavaan)
data(PoliticalDemocracy)
summary(PoliticalDemocracy)
install.packages("proto",dependiencies=T)
install.packages("proto",dependencies=T)
statnet
libarary(statnet)
library(statnet)
data(samplike)
samlike
data(samplik)
library(statnet)
data(samlike)
data()
samplike
samplke
samplk
data(samplike)
data(samplk)
samplk
summary(samplk)
samplk1
library("ROAuth", dependencies=T)
install.packages("ROAuth", dependencies=T)
k<-0
tapply(1:10^7,function(x) k<-k+x)
?tapply
apply(1:10^7,function(x) k<-k+x)
apply(1:10^7,FUN=function(x) k<-k+x)
X<-1L10^7
X<-1^10^7
length(X)
k
lapply(1:10^7,function(x) k<-k+x)
h<-apply(1:10^7,function(x) k<-k+x)
?sapply
h<-sapply(1:10^7,function(x) k<-k+x)
h[1]
length(h)
# File-Name:       speed_test.R                 #
# Date:            2010-06-04                                #
# Author:          Drew Conway                                       #
# Purpose:         #
# Data Used:       #
# Packages Used:          #
# Output File:     #
# Data Output:     #
# Machine:         Drew Conway's MacBook                         #
                                                                    #
# Ex1#
k<-0#
print(system.time(sapply(1:10^7,function(i) k<-k+i)))
# File-Name:       speed_test.R                 #
# Date:            2010-06-04                                #
# Author:          Drew Conway                                       #
# Purpose:         #
# Data Used:       #
# Packages Used:          #
# Output File:     #
# Data Output:     #
# Machine:         Drew Conway's MacBook                         #
                                                                    #
# Ex1#
k<-0#
ex1<-function(x) {#
    for(i in 1:10^7) {#
        x<-x+i#
    }#
}#
print(system.time(ex1(k)))
k<-0#
print(system.time(apply(X=1:10^7,FUN=function(x) k<-k+x)))
dim(1:10^7)
?apply
# File-Name:       speed_test.R                 #
# Date:            2010-06-04                                #
# Author:          Drew Conway                                       #
# Purpose:         #
# Data Used:       #
# Packages Used:          #
# Output File:     #
# Data Output:     #
# Machine:         Drew Conway's MacBook                         #
                                                                    #
# Ex1#
k<-0#
print(system.time(1:10^7,1,function(x) k<-k+x)))
# File-Name:       speed_test.R                 #
# Date:            2010-06-04                                #
# Author:          Drew Conway                                       #
# Purpose:         #
# Data Used:       #
# Packages Used:          #
# Output File:     #
# Data Output:     #
# Machine:         Drew Conway's MacBook                         #
                                                                    #
# Ex1#
k<-0#
print(system.time(1:10^7,1,function(x) k<-k+x))
# File-Name:       speed_test.R                 #
# Date:            2010-06-04                                #
# Author:          Drew Conway                                       #
# Purpose:         #
# Data Used:       #
# Packages Used:          #
# Output File:     #
# Data Output:     #
# Machine:         Drew Conway's MacBook                         #
                                                                    #
# Ex1#
k<-0#
print(system.time(1:10^7,function(x) k<-k+x))
k<-0#
print(system.time(apply(1:10^7,function(x) k<-k+x)))
# File-Name:       speed_test.R                 #
# Date:            2010-06-04                                #
# Author:          Drew Conway                                       #
# Purpose:         #
# Data Used:       #
# Packages Used:          #
# Output File:     #
# Data Output:     #
# Machine:         Drew Conway's MacBook                         #
                                                                    #
# Ex1#
k<-0#
print(system.time(apply(1:10^7,FUN=function(x) k<-k+x)))
k<-0#
print(system.time(apply(1:10^7,1,FUN=function(x) k<-k+x)))
install.packages("foreach",dependencies=T)
library(foreach)
?foreach
k<-0
foreach(i=1:10^7) %do% k<-k+i
foreach(i=1:3) %do%#
  sqrt(i)
foreach(i=1:10^7) %do%
k<-k+i
foreach(i=1:10^7) %do%
function(i) k<-k+i
library(Hmisc)
install.packages("Hmsic",dependencies=T)
install.packages("Hmisc",dependencies=T)
library(Hmisc)
install.packages("rjags",dependencies=T)
library(rjags)
install.packages("rjags")
install.packages("tm")
install.packages("tm",dependencies=T)
?library
install.packages("ggplot2",dependencies=T)
require(maps)
library(ggplot2)
nz <- data.frame(map("af", plot=FALSE)[c("x","y")])
nz <- data.frame(map("ag", plot=FALSE)[c("x","y")])
nz <- data.frame(map("Afghanistan", plot=FALSE)[c("x","y")])
nz <- data.frame(map("afghanistan", plot=FALSE)[c("x","y")])
?maps
nz <- data.frame(map("nz", plot=FALSE)[c("x","y")])
nz
nz <- data.frame(map("af", plot=FALSE)[c("x","y")])
(nzmap <- qplot(x, y, data=nz, geom="path"))
?mapproject
library(maptools)
?mapproject
?maptools
map_data("af")
map_data("Afghanistan")
?map_data
reg <- as.data.frame(map("world", xlim = -c(37.3, 29.4), ylim = c(75.0,60.6), plot = FALSE)[c("x", "y")])
reg <- as.data.frame(map("world", ylim = -c(37.3, 29.4), xlim = c(75.0,60.6), plot = FALSE)[c("x", "y")])
library(ff)
?ff
174*10^1
demo()
revo()
library(maptools)
roads<-readShapeLines()
roads<-readShapeLines("roads/roads-all.shp")
